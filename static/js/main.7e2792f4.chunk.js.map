{"version":3,"sources":["components/Navbar/index.tsx","components/Header/index.tsx","components/Button/index.tsx","components/Svg/EditIcon/index.tsx","components/Svg/DeleteIcon/index.tsx","store/Books/book.reducer.ts","screens/Books/components/Book/index.tsx","components/Svg/AddIcon/index.tsx","screens/Books/components/AddAndEditBook/index.tsx","components/Svg/SearchIcon/index.tsx","screens/Books/components/SearchBooks/index.tsx","screens/Books/index.tsx","store/Authors/author.reducer.ts","screens/Authors/components/AddAndEditAuthor/index.tsx","screens/Authors/components/Author/index.tsx","screens/Authors/components/SearchAuthors/index.tsx","screens/Authors/index.tsx","screens/index.tsx","App.tsx","reportWebVitals.ts","store/index.reducers.ts","store/index.store.ts","index.tsx"],"names":["Navbar","className","role","activeClassName","id","data-toggle","to","aria-controls","aria-selected","Header","props","scope","list","map","item","Button","disabled","type","onClick","text","EditIcon","xmlns","width","height","fill","viewBox","d","DeleteIcon","fill-rule","initialState","data","books","readOnlyList","currentId","isEdit","constants","Book","dispatch","useDispatch","index","title","release_date","rate","author","category","price","payload","edit","AddIcon","AddAndEditBook","editMode","useSelector","state","authors","useState","author_id","setBookInfo","formik","useFormik","initialValues","validateOnChange","validateOnMount","validate","values","errors","onSubmit","editedBook","Number","selectedRow","clearBookInfo","editBook","add","addBook","setFieldValue","useEffect","bookInfo","setValues","handleSubmit","noValidate","name","placeholder","value","onChange","event","target","Object","keys","length","min","max","step","toFixed","defaultValue","row","fullName","SearchIcon","SearchBooks","searchItem","setSearchItem","e","preventDefault","filterSearchValues","filter","isEmptySearch","headerList","Books","setSelectedRow","sendBookInfo","find","window","scrollTo","getAuthor","AddAndEditAuthor","setFullName","editedAuthor","clearAuthorInfo","editAuthor","addAuthor","authorInfo","Author","numOfBooks","SearchAuthors","Authors","sendAuthorInfo","basename","location","pathname","from","exact","strict","path","component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","newList","Math","floor","random","newAuthor","$authors","$filteredAuthors","toLowerCase","includes","newBook","$books","book","$filteredBooks","toString","appStore","createStore","JSON","parse","localStorage","getItem","compose","__REDUX_DEVTOOLS_EXTENSION__","applyMiddleware","store","a","setTimeout","computedStates","getState","convertToString","stringify","setItem","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7e2792f4.chunk.js","sourcesContent":["// React router\r\nimport { NavLink } from \"react-router-dom\";\r\n// Types\r\nimport { FC } from \"react\";\r\n\r\n/**\r\n * This component used for the main navbar that exists in project\r\n * @constructor\r\n */\r\nexport const Navbar: FC = () => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<nav className=\"navBar\">\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<ul className=\"nav nav-pills\" role=\"tablist\">\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\t\tid=\"books-tab\"\r\n\t\t\t\t\t\t\t\tdata-toggle=\"tab\"\r\n\t\t\t\t\t\t\t\tto=\"/books\"\r\n\t\t\t\t\t\t\t\trole=\"tab\"\r\n\t\t\t\t\t\t\t\taria-controls=\"books\"\r\n\t\t\t\t\t\t\t\taria-selected=\"true\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tBooks\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t\t<NavLink\r\n\t\t\t\t\t\t\t\tclassName=\"nav-link\"\r\n\t\t\t\t\t\t\t\tactiveClassName=\"active\"\r\n\t\t\t\t\t\t\t\tid=\"authors-tab\"\r\n\t\t\t\t\t\t\t\tdata-toggle=\"tab\"\r\n\t\t\t\t\t\t\t\tto=\"/authors\"\r\n\t\t\t\t\t\t\t\trole=\"tab\"\r\n\t\t\t\t\t\t\t\taria-controls=\"authors\"\r\n\t\t\t\t\t\t\t\taria-selected=\"false\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\tAuthors\r\n\t\t\t\t\t\t\t</NavLink>\r\n\t\t\t\t\t\t</li>\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t</nav>\r\n\t\t</>\r\n\t);\r\n};\r\n","/**\r\n * This component used for the header of the table in the whole project\r\n * @param props\r\n * @constructor\r\n */\r\nexport const Header = (props: any) => {\r\n\treturn (\r\n\t\t<thead className=\"headerColor\">\r\n\t\t\t<tr>\r\n\t\t\t\t<th scope=\"col\">#</th>\r\n\r\n\t\t\t\t{props.list.map((item: any): any => (\r\n\t\t\t\t\t<th key={item} scope=\"col\">\r\n\t\t\t\t\t\t{item}\r\n\t\t\t\t\t</th>\r\n\t\t\t\t))}\r\n\t\t\t</tr>\r\n\t\t</thead>\r\n\t);\r\n};\r\n","// Types\r\nimport { FC, MouseEventHandler } from \"react\";\r\n\r\ninterface Props {\r\n\tonClick?: MouseEventHandler<HTMLButtonElement>;\r\n\ttype?: \"submit\" | \"reset\" | \"button\";\r\n\ttext?: any;\r\n\tclassName?: string;\r\n\tdisabled?: boolean;\r\n}\r\n\r\n/**\r\n * This component used for all types of buttons in the whole project\r\n * @param props\r\n * @constructor\r\n */\r\nexport const Button: FC<Props> = (props) => {\r\n\treturn (\r\n\t\t<button\r\n\t\t\tdisabled={props.disabled}\r\n\t\t\ttype={props.type}\r\n\t\t\tclassName={`btn btn-${props.className}`}\r\n\t\t\tonClick={props.onClick}\r\n\t\t>\r\n\t\t\t{props.text}\r\n\t\t</button>\r\n\t);\r\n};\r\n","// Types\r\nimport { FC } from \"react\";\r\n\r\n/**\r\n * This component used to show edit icon\r\n * @constructor\r\n */\r\nexport const EditIcon: FC = () => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\twidth=\"16\"\r\n\t\t\theight=\"16\"\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\tclassName=\"bi bi-pencil\"\r\n\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t>\r\n\t\t\t<path d=\"M12.146.146a.5.5 0 0 1 .708 0l3 3a.5.5 0 0 1 0 .708l-10 10a.5.5 0 0 1-.168.11l-5 2a.5.5 0 0 1-.65-.65l2-5a.5.5 0 0 1 .11-.168l10-10zM11.207 2.5 13.5 4.793 14.793 3.5 12.5 1.207 11.207 2.5zm1.586 3L10.5 3.207 4 9.707V10h.5a.5.5 0 0 1 .5.5v.5h.5a.5.5 0 0 1 .5.5v.5h.293l6.5-6.5zm-9.761 5.175-.106.106-1.528 3.821 3.821-1.528.106-.106A.5.5 0 0 1 5 12.5V12h-.5a.5.5 0 0 1-.5-.5V11h-.5a.5.5 0 0 1-.468-.325z\" />\r\n\t\t</svg>\r\n\t);\r\n};\r\n","// Types\r\nimport { FC } from \"react\";\r\n\r\n/**\r\n * This component used to show delete icon\r\n * @constructor\r\n */\r\nexport const DeleteIcon: FC = () => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\twidth=\"16\"\r\n\t\t\theight=\"16\"\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\tclassName=\"bi bi-trash\"\r\n\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t>\r\n\t\t\t<path d=\"M5.5 5.5A.5.5 0 0 1 6 6v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm2.5 0a.5.5 0 0 1 .5.5v6a.5.5 0 0 1-1 0V6a.5.5 0 0 1 .5-.5zm3 .5a.5.5 0 0 0-1 0v6a.5.5 0 0 0 1 0V6z\" />\r\n\t\t\t<path\r\n\t\t\t\tfill-rule=\"evenodd\"\r\n\t\t\t\td=\"M14.5 3a1 1 0 0 1-1 1H13v9a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2V4h-.5a1 1 0 0 1-1-1V2a1 1 0 0 1 1-1H6a1 1 0 0 1 1-1h2a1 1 0 0 1 1 1h3.5a1 1 0 0 1 1 1v1zM4.118 4 4 4.059V13a1 1 0 0 0 1 1h6a1 1 0 0 0 1-1V4.059L11.882 4H4.118zM2.5 3V2h11v1h-11z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t);\r\n};\r\n","// Redux\r\nimport { Reducer } from \"redux\";\r\n// Dummy data\r\nimport data from \"../../data/info.json\";\r\n\r\nexport interface BookEntity {\r\n\tid: number;\r\n\ttitle: string;\r\n\trelease_date: string;\r\n\tcategory: string;\r\n\trate: number;\r\n\tauthor_id?: number;\r\n\tprice: string;\r\n}\r\n\r\nexport interface BookState {\r\n\tlist: Array<BookEntity>;\r\n\treadOnlyList: Array<BookEntity>;\r\n\tcurrentId: number;\r\n\tisEdit: boolean;\r\n}\r\n\r\nconst initialState: BookState = {\r\n\tlist: data.books,\r\n\treadOnlyList: data.books,\r\n\tcurrentId: 0,\r\n\tisEdit: false,\r\n};\r\nexport const constants = {\r\n\tDELETE: \"BOOKS/DELETE\",\r\n\tADD: \"BOOKS/ADD\",\r\n\tEDIT: \"BOOKS/EDIT\",\r\n\tSEARCH: \"BOOKS/SEARCH\",\r\n\tCLEAR_SEARCH: \"BOOKS/CLEAR_SEARCH\",\r\n\tIS_EDIT: \"BOOKS/IS_EDIT\",\r\n};\r\nexport const bookReducer: Reducer<BookState> = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\t/**\r\n\t\t * Delete each row by id\r\n\t\t */\r\n\t\tcase constants.DELETE: {\r\n\t\t\tconst newList = state.readOnlyList.filter((row) => {\r\n\t\t\t\treturn row.id !== action.payload;\r\n\t\t\t});\r\n\t\t\treturn { ...state, list: newList, readOnlyList: newList };\r\n\t\t}\r\n\t\t/**\r\n\t\t * Add new data and allocate an unique id to each row\r\n\t\t */\r\n\t\tcase constants.ADD: {\r\n\t\t\tconst id = Math.floor(Math.random() * 100);\r\n\t\t\tconst newBook = { id, ...action.payload };\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: [...state.list, newBook],\r\n\t\t\t\treadOnlyList: [...state.list, newBook],\r\n\t\t\t};\r\n\t\t}\r\n\t\t/**\r\n\t\t * Edit each row\r\n\t\t */\r\n\t\tcase constants.EDIT: {\r\n\t\t\tlet $books = [...state.list].map((book) => {\r\n\t\t\t\tif (book.id === action.payload.id) {\r\n\t\t\t\t\tbook.title = action.payload.title;\r\n\t\t\t\t\tbook.rate = action.payload.rate;\r\n\t\t\t\t\tbook.price = action.payload.price;\r\n\t\t\t\t\tbook.release_date = action.payload.release_date;\r\n\t\t\t\t\tbook.category = action.payload.category;\r\n\t\t\t\t\tbook.author_id = action.payload.author_id;\r\n\t\t\t\t}\r\n\t\t\t\treturn book;\r\n\t\t\t});\r\n\r\n\t\t\treturn { ...state, list: $books };\r\n\t\t}\r\n\t\t/**\r\n\t\t * To change add button when edit button in row has been clicked\r\n\t\t */\r\n\t\tcase constants.IS_EDIT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisEdit: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\t/**\r\n\t\t * Search an item in table\r\n\t\t */\r\n\t\tcase constants.SEARCH: {\r\n\t\t\tconst $filteredBooks = state.readOnlyList.filter((item) => {\r\n\t\t\t\tconst { title, release_date, rate, category, author_id } = action.payload;\r\n\t\t\t\treturn (\r\n\t\t\t\t\titem.author_id === author_id ||\r\n\t\t\t\t\t(item.title.toLowerCase().includes(title) &&\r\n\t\t\t\t\t\titem.release_date.includes(release_date) &&\r\n\t\t\t\t\t\titem.rate.toString().includes(rate) &&\r\n\t\t\t\t\t\titem.category.toLowerCase().includes(category))\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: $filteredBooks,\r\n\t\t\t};\r\n\t\t}\r\n\t\t/**\r\n\t\t * Render the main store when we fill search input by nothing\r\n\t\t */\r\n\t\tcase constants.CLEAR_SEARCH: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: state.readOnlyList,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import * as React from \"react\";\r\n// Common components\r\nimport { Button } from \"../../../../components/Button\";\r\nimport { EditIcon } from \"../../../../components/Svg/EditIcon\";\r\nimport { DeleteIcon } from \"../../../../components/Svg/DeleteIcon\";\r\n// Hooks\r\nimport { useDispatch } from \"react-redux\";\r\n// Constants\r\nimport { constants } from \"../../../../store/Books/book.reducer\";\r\n\r\ninterface IBookEntity {\r\n\tid: number;\r\n\ttitle: string;\r\n\trelease_date: string;\r\n\tcategory: string;\r\n\trate: number;\r\n\tauthor_id?: number;\r\n\tprice: string;\r\n\tindex: number;\r\n\tedit: any;\r\n\tauthor?: string;\r\n}\r\n\r\n/**\r\n * This component due to show data in each row and also add and edit action\r\n * @param props\r\n * @constructor\r\n */\r\nexport const Book = (props: IBookEntity) => {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\r\n\t/**\r\n\t * Send action and payload to reducer to delete a row from table\r\n\t * @param id\r\n\t */\r\n\tfunction deleteBook(id: number) {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.DELETE,\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t}\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td>{props.index + 1}</td>\r\n\t\t\t<td>{props.title}</td>\r\n\t\t\t<td>{props.release_date}</td>\r\n\t\t\t<td>{props.rate}</td>\r\n\t\t\t<td>{props.author}</td>\r\n\t\t\t<td>{props.category}</td>\r\n\t\t\t<td>{props.price}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => deleteBook(props.id)}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"danger\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => props.edit()}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"primary\"\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n","// Types\r\nimport { FC } from \"react\";\r\n\r\n/**\r\n * This component used to show add icon\r\n * @constructor\r\n */\r\nexport const AddIcon: FC = () => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\twidth=\"16\"\r\n\t\t\theight=\"16\"\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\tclassName=\"bi bi-plus-lg\"\r\n\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t>\r\n\t\t\t<path d=\"M8 0a1 1 0 0 1 1 1v6h6a1 1 0 1 1 0 2H9v6a1 1 0 1 1-2 0V9H1a1 1 0 0 1 0-2h6V1a1 1 0 0 1 1-1z\" />\r\n\t\t</svg>\r\n\t);\r\n};\r\n","// Hooks\r\nimport { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\n// Common components\r\nimport { Button } from \"../../../../components/Button\";\r\nimport { AddIcon } from \"../../../../components/Svg/AddIcon\";\r\nimport { EditIcon } from \"../../../../components/Svg/EditIcon\";\r\n// Constants\r\nimport { constants } from \"../../../../store/Books/book.reducer\";\r\n\r\ninterface IDetailEntity {\r\n\tselectedRow: any;\r\n\tbookInfo: any;\r\n}\r\n\r\n/**\r\n * This component due to handling add and delete action\r\n * @param props\r\n * @constructor\r\n */\r\nexport const AddAndEditBook = (props: IDetailEntity) => {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\t// Store connector\r\n\tconst editMode = useSelector((state: any) => state.books.isEdit);\r\n\tconst authors = useSelector((state: any) => state.authors.list);\r\n\r\n\tconst [bookInfo, setBookInfo] = useState({\r\n\t\ttitle: \"\",\r\n\t\trelease_date: \"\",\r\n\t\trate: \"\",\r\n\t\tcategory: \"\",\r\n\t\tprice: \"\",\r\n\t\tauthor_id: -1,\r\n\t});\r\n\t/**\r\n\t * Validating form by formik\r\n\t */\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\ttitle: \"\",\r\n\t\t\trelease_date: \"\",\r\n\t\t\trate: \"\",\r\n\t\t\tcategory: \"\",\r\n\t\t\tprice: \"\",\r\n\t\t\tauthor_id: -1,\r\n\t\t},\r\n\t\tvalidateOnChange: true,\r\n\t\tvalidateOnMount: true,\r\n\t\tvalidate: (values) => {\r\n\t\t\tconst errors: Record<string, any> = {};\r\n\r\n\t\t\tif (!values.title) {\r\n\t\t\t\terrors.title = \"Please enter title\";\r\n\t\t\t}\r\n\t\t\tif (!values.rate) {\r\n\t\t\t\terrors.rate = \"Please enter rate\";\r\n\t\t\t}\r\n\t\t\tif (!values.release_date) {\r\n\t\t\t\terrors.release_date = \"Please enter date\";\r\n\t\t\t}\r\n\t\t\tif (!values.category) {\r\n\t\t\t\terrors.category = \"Please enter category\";\r\n\t\t\t}\r\n\t\t\tif (!values.price) {\r\n\t\t\t\terrors.price = \"Please enter price\";\r\n\t\t\t}\r\n\t\t\tif (values.author_id === -1) {\r\n\t\t\t\terrors.author_id = \"Please choose an author\";\r\n\t\t\t}\r\n\t\t\treturn errors;\r\n\t\t},\r\n\t\tonSubmit: () => {\r\n\t\t\teditMode ? editBook() : addBook();\r\n\t\t},\r\n\t});\r\n\r\n\t/**\r\n\t *  Send action and payload to the reducer to add something on table\r\n\t * @param add\r\n\t */\r\n\tfunction handleAddBook(add: any) {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.ADD,\r\n\t\t\tpayload: add,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set edit mode false it means that update button change into add again\r\n\t */\r\n\tfunction addMode() {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.IS_EDIT,\r\n\t\t\tpayload: false,\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * Add new data and clear the state\r\n\t */\r\n\tfunction addBook() {\r\n\t\thandleAddBook({\r\n\t\t\ttitle: formik.values.title,\r\n\t\t\trate: formik.values.rate,\r\n\t\t\trelease_date: formik.values.release_date,\r\n\t\t\tcategory: formik.values.category,\r\n\t\t\tprice: formik.values.price,\r\n\t\t\tauthor_id: Number(formik.values.author_id),\r\n\t\t});\r\n\t\tclearBookInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * Send action and payload to the reducer to edit something on table\r\n\t * @param editedBook\r\n\t */\r\n\tfunction handleEditBook(editedBook: any) {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.EDIT,\r\n\t\t\tpayload: {\r\n\t\t\t\tid: props.selectedRow.id,\r\n\t\t\t\ttitle: editedBook.title,\r\n\t\t\t\trate: editedBook.rate,\r\n\t\t\t\tprice: editedBook.price,\r\n\t\t\t\trelease_date: editedBook.release_date,\r\n\t\t\t\tcategory: editedBook.category,\r\n\t\t\t\tauthor_id: editedBook.author_id,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\t/**\r\n\t * Clear state\r\n\t */\r\n\tfunction clearBookInfo() {\r\n\t\tformik.setFieldValue(\"title\", \"\");\r\n\t\tformik.setFieldValue(\"rate\", \"\");\r\n\t\tformik.setFieldValue(\"release_date\", \"\");\r\n\t\tformik.setFieldValue(\"category\", \"\");\r\n\t\tformik.setFieldValue(\"price\", \"\");\r\n\t\tformik.setFieldValue(\"author_id\", -1);\r\n\t}\r\n\r\n\t/**\r\n\t * Edit data and clear the state\r\n\t */\r\n\tfunction editBook() {\r\n\t\thandleEditBook({\r\n\t\t\ttitle: formik.values.title,\r\n\t\t\trate: formik.values.rate,\r\n\t\t\trelease_date: formik.values.release_date,\r\n\t\t\tcategory: formik.values.category,\r\n\t\t\tprice: formik.values.price,\r\n\t\t\tauthor_id: Number(formik.values.author_id),\r\n\t\t});\r\n\t\taddMode();\r\n\t\tclearBookInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for title input\r\n\t * @param event\r\n\t */\r\n\tfunction changeTitle(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tformik.setFieldValue(\"title\", event.target.value);\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for category input\r\n\t * @param event\r\n\t */\r\n\tfunction changeCategory(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tformik.setFieldValue(\"category\", event.target.value);\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for rate input\r\n\t * @param event\r\n\t */\r\n\tfunction changeRate(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tconst { value } = event.target;\r\n\t\tif (value === \"\" || (Number(value) && Number(value) <= 10)) {\r\n\t\t\tformik.setFieldValue(\"rate\", Number(value).toFixed(1));\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for release date input\r\n\t * @param event\r\n\t */\r\n\tfunction changeReleaseDate(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tconst { value } = event.target;\r\n\t\tif (value === \"\" || Object.keys(value).length <= 10) {\r\n\t\t\tformik.setFieldValue(\"release_date\", event.target.value);\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for price input\r\n\t * @param event\r\n\t */\r\n\tfunction changePrice(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tformik.setFieldValue(\"price\", event.target.value);\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for author select box\r\n\t * @param event\r\n\t */\r\n\tfunction changeAuthor(event: ChangeEvent<HTMLSelectElement>) {\r\n\t\tformik.setFieldValue(\"author_id\", event.target.value);\r\n\t}\r\n\t/**\r\n\t * Use to set state edit button in the table is clicked\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (props.bookInfo) {\r\n\t\t\tsetBookInfo(props.bookInfo);\r\n\t\t\tformik.setValues({ ...props.bookInfo });\r\n\t\t}\r\n\t}, [props.bookInfo]);\r\n\r\n\treturn (\r\n\t\t<div className=\"container addSection\">\r\n\t\t\t<form onSubmit={formik.handleSubmit} noValidate>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h2>Add book</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tvalue={formik.values?.title}\r\n\t\t\t\t\t\t\t\tonChange={changeTitle}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<p className=\"error\">{formik.errors.title || null}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\t\tname=\"releaseDate\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Release Date\"\r\n\t\t\t\t\t\t\t\tvalue={formik.values?.release_date}\r\n\t\t\t\t\t\t\t\tonChange={changeReleaseDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<p className=\"error\">{formik.errors.release_date || null}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tname=\"rate\"\r\n\t\t\t\t\t\t\t\tmin={0}\r\n\t\t\t\t\t\t\t\tmax={10}\r\n\t\t\t\t\t\t\t\tstep={0.1}\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Rate\"\r\n\t\t\t\t\t\t\t\tvalue={formik.values?.rate}\r\n\t\t\t\t\t\t\t\tonChange={changeRate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<p className=\"error\">{formik.errors.rate || null}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Category\"\r\n\t\t\t\t\t\t\t\tvalue={formik.values?.category}\r\n\t\t\t\t\t\t\t\tonChange={changeCategory}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<p className=\"error\">{formik.errors.category || null}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tname=\"price\"\r\n\t\t\t\t\t\t\t\tmin=\"0\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Price($)\"\r\n\t\t\t\t\t\t\t\tvalue={formik.values?.price}\r\n\t\t\t\t\t\t\t\tonChange={changePrice}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<p className=\"error\">{formik.errors.price || null}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tdefaultValue={-1}\r\n\t\t\t\t\t\t\tname=\"authors\"\r\n\t\t\t\t\t\t\tclassName=\"form-select\"\r\n\t\t\t\t\t\t\tid=\"autoSizingSelect\"\r\n\t\t\t\t\t\t\tvalue={formik.values?.author_id}\r\n\t\t\t\t\t\t\tonChange={changeAuthor}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value={-1}>Authors</option>\r\n\t\t\t\t\t\t\t{authors.map((row: any) => (\r\n\t\t\t\t\t\t\t\t<option key={row.id} value={row.id}>\r\n\t\t\t\t\t\t\t\t\t{row.fullName}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t\t<p className=\"error\">{formik.errors.author_id || null}</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-4 col-12\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tdisabled={!!Object.keys(formik.errors).length}\r\n\t\t\t\t\t\t\tclassName={editMode ? \"primary\" : \"success\"}\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\ttext={\r\n\t\t\t\t\t\t\t\teditMode ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n","// Types\r\nimport { FC } from \"react\";\r\n\r\n/**\r\n * This component used to show search icon\r\n * @constructor\r\n */\r\nexport const SearchIcon: FC = () => {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\txmlns=\"http://www.w3.org/2000/svg\"\r\n\t\t\twidth=\"16\"\r\n\t\t\theight=\"16\"\r\n\t\t\tfill=\"currentColor\"\r\n\t\t\tclassName=\"bi bi-search\"\r\n\t\t\tviewBox=\"0 0 16 16\"\r\n\t\t>\r\n\t\t\t<path d=\"M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z\" />\r\n\t\t</svg>\r\n\t);\r\n};\r\n","// Dummy data\r\nimport data from \"../../../../data/info.json\";\r\n// Common components\r\nimport { Button } from \"../../../../components/Button\";\r\nimport { SearchIcon } from \"../../../../components/Svg/SearchIcon\";\r\n// Hooks\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// Constants\r\nimport { constants } from \"../../../../store/Books/book.reducer\";\r\n// Types\r\nimport { ChangeEvent, FC } from \"react\";\r\n\r\n/**\r\n * This component due to search in the whole data in table\r\n * @constructor\r\n */\r\nexport const SearchBooks: FC = () => {\r\n\tconst [searchItem, setSearchItem] = useState({\r\n\t\ttitle: \"\",\r\n\t\trelease_date: \"\",\r\n\t\trate: \"\",\r\n\t\tcategory: \"\",\r\n\t\tauthor_id: -1,\r\n\t});\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\r\n\t/**\r\n\t * Send action and payload to reducer for search item in the table when the input has data\r\n\t * and also when can see all data when search input is empty\r\n\t * @param e\r\n\t */\r\n\tfunction search(e: any) {\r\n\t\te.preventDefault();\r\n\r\n\t\tconst values = Object.values(searchItem);\r\n\t\tconst filterSearchValues = values.filter((item: any) => item !== \"\" && item !== -1);\r\n\t\tconst isEmptySearch = !filterSearchValues?.length;\r\n\t\tif (!isEmptySearch) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: constants.SEARCH,\r\n\t\t\t\tpayload: searchItem,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: constants.CLEAR_SEARCH,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for title input\r\n\t * @param event\r\n\t */\r\n\tfunction searchTitle(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tsetSearchItem({ ...searchItem, title: event.target.value });\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for release date input\r\n\t * @param event\r\n\t */\r\n\tfunction searchReleaseDate(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tsetSearchItem({ ...searchItem, release_date: event.target.value });\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for rate input\r\n\t * @param event\r\n\t */\r\n\tfunction searchRate(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tsetSearchItem({ ...searchItem, rate: event.target.value });\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for category input\r\n\t * @param event\r\n\t */\r\n\tfunction searchCategory(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tsetSearchItem({ ...searchItem, category: event.target.value });\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for author select box\r\n\t * @param event\r\n\t */\r\n\tfunction searchAuthor(event: ChangeEvent<HTMLSelectElement>) {\r\n\t\tsetSearchItem({ ...searchItem, author_id: Number(event.target.value) });\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container addSection search\">\r\n\t\t\t<form>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h2>Search book</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Title\"\r\n\t\t\t\t\t\t\t\tvalue={searchItem?.title}\r\n\t\t\t\t\t\t\t\tonChange={searchTitle}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Release date\"\r\n\t\t\t\t\t\t\t\tvalue={searchItem?.release_date}\r\n\t\t\t\t\t\t\t\tonChange={searchReleaseDate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"number\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Rate\"\r\n\t\t\t\t\t\t\t\tvalue={searchItem?.rate}\r\n\t\t\t\t\t\t\t\tonChange={searchRate}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Category\"\r\n\t\t\t\t\t\t\t\tvalue={searchItem?.category}\r\n\t\t\t\t\t\t\t\tonChange={searchCategory}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<select\r\n\t\t\t\t\t\t\tdefaultValue={-1}\r\n\t\t\t\t\t\t\tclassName=\"form-select\"\r\n\t\t\t\t\t\t\tid=\"autoSizingSelect\"\r\n\t\t\t\t\t\t\tvalue={searchItem?.author_id}\r\n\t\t\t\t\t\t\tonChange={searchAuthor}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<option value={-1}>Authors</option>\r\n\t\t\t\t\t\t\t{data.authors.map((row) => (\r\n\t\t\t\t\t\t\t\t<option key={row.id} value={row.id}>\r\n\t\t\t\t\t\t\t\t\t{row.fullName}\r\n\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t</select>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4 col-12\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttext={\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={search}\r\n\t\t\t\t\t\t\tclassName={\"success\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n","//Json\r\nimport data from \"../../data/info.json\";\r\n// Common components\r\nimport { Header } from \"../../components/Header\";\r\n//Local components\r\nimport { Book } from \"./components/Book\";\r\nimport { AddAndEditBook } from \"./components/AddAndEditBook\";\r\n//Hooks\r\nimport { useState } from \"react\";\r\nimport { SearchBooks } from \"./components/SearchBooks\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// Types\r\nimport { StateNetwork } from \"../../types/store.type\";\r\nimport { FC } from \"react\";\r\n// Constants\r\nimport { constants } from \"../../store/Books/book.reducer\";\r\n\r\nexport interface IBookEntity {\r\n\tid: number;\r\n\ttitle: string;\r\n\trelease_date: string;\r\n\tcategory: string;\r\n\trate: number;\r\n\tauthor_id?: number;\r\n\tprice: string;\r\n}\r\n/**\r\n * This array will send to the header component to render the title of each column in the table\r\n */\r\nconst headerList = [\"Title\", \"Release date\", \"Rate\", \"Author\", \"Category\", \"Price($)\", \"Action\"];\r\n/**\r\n * This is the main component of authors and contains local components such as search, add and edit, delete\r\n * @constructor\r\n */\r\nexport const Books: FC = () => {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\t// Store connector\r\n\tconst books = useSelector<StateNetwork, Array<IBookEntity>>((state) => state.books.list);\r\n\r\n\tconst [selectedRow, setSelectedRow] = useState<any>();\r\n\r\n\t/**\r\n\t * Sending data from each row to add form and change button of add form\r\n\t * @param id\r\n\t */\r\n\tfunction sendBookInfo(id: number) {\r\n\t\tsetSelectedRow(books.find((item) => item.id === id));\r\n\t\teditMode();\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\t/**\r\n\t * Set edit mode true to allow update row\r\n\t */\r\n\tfunction editMode() {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.IS_EDIT,\r\n\t\t\tpayload: true,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Show author name by id that we have in authors list\r\n\t * @param id\r\n\t */\r\n\tfunction getAuthor(id?: number) {\r\n\t\treturn data.authors.find((item) => item.id === id)?.fullName;\r\n\t}\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AddAndEditBook bookInfo={selectedRow} selectedRow={selectedRow} />\r\n\t\t\t<SearchBooks />\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{books.length ? (\r\n\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t\t<Header list={headerList} />\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{books.map((row, index) => (\r\n\t\t\t\t\t\t\t\t\t<Book\r\n\t\t\t\t\t\t\t\t\t\tkey={row.id}\r\n\t\t\t\t\t\t\t\t\t\t{...row}\r\n\t\t\t\t\t\t\t\t\t\t{...{ index }}\r\n\t\t\t\t\t\t\t\t\t\tauthor={getAuthor(row.author_id)}\r\n\t\t\t\t\t\t\t\t\t\tedit={() => sendBookInfo(row.id)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\tThere is no result to show!\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","import { Reducer } from \"redux\";\r\nimport data from \"../../data/info.json\";\r\n\r\nexport interface AuthorEntity {\r\n\tid: number;\r\n\tfullName: string;\r\n}\r\n\r\nexport interface AuthorState {\r\n\tlist: Array<AuthorEntity>;\r\n\treadOnlyList: Array<AuthorEntity>;\r\n\tcurrentId: number;\r\n\tisEdit: boolean;\r\n}\r\n\r\nconst initialState: AuthorState = {\r\n\tlist: data.authors,\r\n\treadOnlyList: data.authors,\r\n\tcurrentId: 0,\r\n\tisEdit: false,\r\n};\r\nexport const constants = {\r\n\tDELETE: \"AUTHORS/DELETE\",\r\n\tADD: \"AUTHORS/ADD\",\r\n\tEDIT: \"AUTHORS/EDIT\",\r\n\tSEARCH: \"AUTHORS/SEARCH\",\r\n\tCLEAR_SEARCH: \"AUTHORS/CLEAR_SEARCH\",\r\n\tIS_EDIT: \"AUTHORS/IS_EDIT\",\r\n};\r\n// @ts-ignore\r\nexport const authorReducer: Reducer<AuthorState> = (state = initialState, action) => {\r\n\tswitch (action.type) {\r\n\t\t/**\r\n\t\t * Delete each row by id\r\n\t\t */\r\n\t\tcase constants.DELETE: {\r\n\t\t\tconst newList = state.readOnlyList.filter((row) => {\r\n\t\t\t\treturn row.id !== action.payload;\r\n\t\t\t});\r\n\t\t\treturn { ...state, list: newList, readOnlyList: newList };\r\n\t\t}\r\n\t\t/**\r\n\t\t * Add new data and allocate an unique id to each row\r\n\t\t */\r\n\t\tcase constants.ADD: {\r\n\t\t\tconst id = Math.floor(Math.random() * 100);\r\n\t\t\tconst newAuthor = { id, ...action.payload };\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: [...state.list, newAuthor],\r\n\t\t\t\treadOnlyList: [...state.list, newAuthor],\r\n\t\t\t};\r\n\t\t}\r\n\t\t/**\r\n\t\t * Edit each row\r\n\t\t */\r\n\t\tcase constants.EDIT: {\r\n\t\t\tlet $authors = [...state.list].map((author) => {\r\n\t\t\t\tif (author.id === action.payload.id) {\r\n\t\t\t\t\tauthor.fullName = action.payload.data;\r\n\t\t\t\t}\r\n\t\t\t\treturn author;\r\n\t\t\t});\r\n\t\t\treturn { ...state, list: $authors };\r\n\t\t}\r\n\t\t/**\r\n\t\t * Search an item in table\r\n\t\t */\r\n\t\tcase constants.SEARCH: {\r\n\t\t\tconst $filteredAuthors = state.readOnlyList.filter((item) => {\r\n\t\t\t\treturn item.fullName.toLowerCase().includes(action.payload);\r\n\t\t\t});\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: $filteredAuthors,\r\n\t\t\t};\r\n\t\t}\r\n\t\t/**\r\n\t\t * Render the main store when we fill search input by nothing\r\n\t\t */\r\n\t\tcase constants.CLEAR_SEARCH: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tlist: state.readOnlyList,\r\n\t\t\t};\r\n\t\t}\r\n\t\t/**\r\n\t\t * To change add button when edit button in row has been clicked\r\n\t\t */\r\n\t\tcase constants.IS_EDIT: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisEdit: action.payload,\r\n\t\t\t};\r\n\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n\treturn state;\r\n};\r\n","// Hooks\r\nimport { useState, useEffect, ChangeEvent } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useFormik } from \"formik\";\r\n// Common components\r\nimport { Button } from \"../../../../components/Button\";\r\nimport { EditIcon } from \"../../../../components/Svg/EditIcon\";\r\nimport { AddIcon } from \"../../../../components/Svg/AddIcon\";\r\n// Constants\r\nimport { constants } from \"../../../../store/Authors/author.reducer\";\r\n\r\ninterface IDetailEntity {\r\n\tselectedRow: any;\r\n\tauthorInfo: any;\r\n}\r\n\r\n/**\r\n * This component due to handling add and delete action\r\n * @param props\r\n * @constructor\r\n */\r\nexport const AddAndEditAuthor = (props: IDetailEntity) => {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\t// Store connector\r\n\tconst editMode = useSelector((state: any) => state.authors.isEdit);\r\n\tconst [fullName, setFullName] = useState(\"\");\r\n\t/**\r\n\t * Validating form by formik\r\n\t */\r\n\tconst formik = useFormik({\r\n\t\tinitialValues: {\r\n\t\t\tfullName: \"\",\r\n\t\t},\r\n\t\tvalidateOnChange: true,\r\n\t\tvalidateOnMount: true,\r\n\t\tvalidate: (values) => {\r\n\t\t\tconst errors: Record<string, any> = {};\r\n\r\n\t\t\tif (!values.fullName) {\r\n\t\t\t\terrors.fullName = \"Please enter full name\";\r\n\t\t\t}\r\n\t\t\treturn errors;\r\n\t\t},\r\n\t\tonSubmit: () => {\r\n\t\t\teditMode ? editAuthor() : addAuthor();\r\n\t\t},\r\n\t});\r\n\r\n\t/**\r\n\t * Send action and payload to the reducer to add something on table\r\n\t * @param add\r\n\t */\r\n\tfunction handleAddAuthor(add: any) {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.ADD,\r\n\t\t\tpayload: add,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Set edit mode false it means that update button change into add again\r\n\t */\r\n\tfunction addMode() {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.IS_EDIT,\r\n\t\t\tpayload: false,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Add new data and clear the state\r\n\t */\r\n\tfunction addAuthor() {\r\n\t\thandleAddAuthor({ fullName: formik.values.fullName });\r\n\t\tclearAuthorInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * Clear state\r\n\t */\r\n\tfunction clearAuthorInfo() {\r\n\t\tformik.setFieldValue(\"fullName\", \"\");\r\n\t}\r\n\r\n\t/**\r\n\t * Use to set state edit button in the table is clicked\r\n\t */\r\n\tuseEffect(() => {\r\n\t\tif (props.authorInfo) {\r\n\t\t\tsetFullName(props.authorInfo);\r\n\t\t\tformik.setValues({ ...props.authorInfo });\r\n\t\t}\r\n\t}, [props.authorInfo]);\r\n\r\n\t/**\r\n\t * Send action and payload to the reducer to edit something on table\r\n\t * @param editedAuthor\r\n\t */\r\n\tfunction handleEditAuthor(editedAuthor: any) {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.EDIT,\r\n\t\t\tpayload: {\r\n\t\t\t\tid: props.selectedRow.id,\r\n\t\t\t\tdata: editedAuthor.fullName,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Edit data and clear the state\r\n\t */\r\n\tfunction editAuthor() {\r\n\t\thandleEditAuthor({ fullName: formik.values.fullName });\r\n\t\taddMode();\r\n\t\tclearAuthorInfo();\r\n\t}\r\n\r\n\t/**\r\n\t * Set value for full name input\r\n\t * @param event\r\n\t */\r\n\tfunction changeFullName(event: ChangeEvent<HTMLInputElement>) {\r\n\t\tformik.setFieldValue(\"fullName\", event.target.value);\r\n\t}\r\n\treturn (\r\n\t\t<div className=\"container addSection\">\r\n\t\t\t<form onSubmit={formik.handleSubmit} noValidate>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h2>Add author</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tname=\"fullName\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tplaceholder=\"Full name\"\r\n\t\t\t\t\t\t\t\tvalue={formik.values.fullName}\r\n\t\t\t\t\t\t\t\tonChange={changeFullName}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t<p className=\"error\">{formik.errors.fullName || null}</p>\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<div className=\"col-md-4 col-12\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\tdisabled={!!Object.keys(formik.errors).length}\r\n\t\t\t\t\t\t\tclassName={editMode ? \"primary\" : \"success\"}\r\n\t\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\t\ttext={\r\n\t\t\t\t\t\t\t\teditMode ? (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t\t\t\t\tUpdate\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t\t<AddIcon />\r\n\t\t\t\t\t\t\t\t\t\tAdd\r\n\t\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n","import * as React from \"react\";\r\n// Common components\r\nimport { Button } from \"../../../../components/Button\";\r\nimport { EditIcon } from \"../../../../components/Svg/EditIcon\";\r\nimport { DeleteIcon } from \"../../../../components/Svg/DeleteIcon\";\r\n// Hooks\r\nimport { useDispatch } from \"react-redux\";\r\n// Constants\r\nimport { constants } from \"../../../../store/Authors/author.reducer\";\r\n\r\ninterface IAuthorEntity {\r\n\tid: number;\r\n\tindex: number;\r\n\tfullName: string;\r\n\tnumOfBooks: number;\r\n\tedit: any;\r\n}\r\n\r\n/**\r\n * This component due to show data in each row and also add and edit action\r\n * @param props\r\n * @constructor\r\n */\r\nexport const Author = (props: IAuthorEntity) => {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\r\n\t/**\r\n\t * Send action and payload to reducer to delete a row from table\r\n\t * @param id\r\n\t */\r\n\tfunction deleteAuthor(id: number) {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.DELETE,\r\n\t\t\tpayload: id,\r\n\t\t});\r\n\t}\r\n\treturn (\r\n\t\t<tr>\r\n\t\t\t<td scope=\"col\">{props.index + 1}</td>\r\n\t\t\t<td scope=\"col\">{props.fullName}</td>\r\n\t\t\t<td scope=\"col\">{props.numOfBooks}</td>\r\n\t\t\t<td>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => deleteAuthor(props.id)}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<DeleteIcon />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"danger\"\r\n\t\t\t\t/>\r\n\t\t\t\t<Button\r\n\t\t\t\t\tonClick={() => props.edit()}\r\n\t\t\t\t\ttext={\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<EditIcon />\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t}\r\n\t\t\t\t\tclassName=\"primary\"\r\n\t\t\t\t/>\r\n\t\t\t</td>\r\n\t\t</tr>\r\n\t);\r\n};\r\n","import * as React from \"react\";\r\n// Common components\r\nimport { Button } from \"../../../../components/Button\";\r\nimport { SearchIcon } from \"../../../../components/Svg/SearchIcon\";\r\n// Hooks\r\nimport { useState } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\n// Constants\r\nimport { constants } from \"../../../../store/Authors/author.reducer\";\r\n// Types\r\nimport { FC } from \"react\";\r\n\r\n/**\r\n * This component due to search in the whole data in table\r\n * @constructor\r\n */\r\nexport const SearchAuthors: FC = () => {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [searchItem, setSearchItem] = useState(\"\");\r\n\r\n\t/**\r\n\t * Send action and payload to reducer for search item in the table when the input has data\r\n\t * and also when can see all data when search input is empty\r\n\t * @param e\r\n\t */\r\n\tfunction search(e: any) {\r\n\t\te.preventDefault();\r\n\t\tif (searchItem.length) {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: constants.SEARCH,\r\n\t\t\t\tpayload: searchItem,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdispatch({\r\n\t\t\t\ttype: constants.CLEAR_SEARCH,\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"container addSection search\">\r\n\t\t\t<form>\r\n\t\t\t\t<div className=\"row\">\r\n\t\t\t\t\t<div className=\"col-12\">\r\n\t\t\t\t\t\t<h2>Search author</h2>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4\">\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\t\t\tid=\"autoSizingInput\"\r\n\t\t\t\t\t\t\t\tvalue={searchItem}\r\n\t\t\t\t\t\t\t\tonChange={(event) => setSearchItem(event.target.value)}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"col-md-4 col-12\">\r\n\t\t\t\t\t\t<Button\r\n\t\t\t\t\t\t\ttext={\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<SearchIcon />\r\n\t\t\t\t\t\t\t\t\tSearch\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tonClick={search}\r\n\t\t\t\t\t\t\tclassName={\"success\"}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n};\r\n","// Hooks\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\n// Common components\r\nimport { Header } from \"../../components/Header\";\r\nimport { AddAndEditAuthor } from \"./components/AddAndEditAuthor\";\r\nimport { Author } from \"./components/Author\";\r\nimport { SearchAuthors } from \"./components/SearchAuthors\";\r\n// Types\r\nimport { StateNetwork } from \"../../types/store.type\";\r\nimport { IBookEntity } from \"../Books\";\r\nimport { FC } from \"react\";\r\n// Constants\r\nimport { constants } from \"../../store/Authors/author.reducer\";\r\n\r\nexport interface IAuthorEntity {\r\n\tid: number;\r\n\tfullName: string;\r\n}\r\n\r\n/**\r\n * This array will send to the header component to render the title of each column in the table\r\n */\r\nconst headerList = [\"Full name\", \"Number of books\", \"Action\"];\r\n/**\r\n * This is the main component of authors and contains local components such as search, add and edit, delete\r\n * @constructor\r\n */\r\nexport const Authors: FC = () => {\r\n\t// Hooks\r\n\tconst dispatch = useDispatch();\r\n\t// Store connector\r\n\tconst authors = useSelector<StateNetwork, Array<IAuthorEntity>>((state) => state.authors.list);\r\n\tconst books = useSelector<StateNetwork, Array<IBookEntity>>((state) => state.books.list);\r\n\r\n\tconst [selectedRow, setSelectedRow] = useState<IAuthorEntity>({} as IAuthorEntity);\r\n\r\n\t/**\r\n\t * Sending data from each row to add form and change button of add form\r\n\t * @param id\r\n\t */\r\n\tfunction sendAuthorInfo(id: number) {\r\n\t\tsetSelectedRow(authors.find((item) => item.id === id)!);\r\n\t\teditMode();\r\n\t\twindow.scrollTo(0, 0);\r\n\t}\r\n\r\n\t/**\r\n\t * Set edit mode true to allow update row\r\n\t */\r\n\tfunction editMode() {\r\n\t\tdispatch({\r\n\t\t\ttype: constants.IS_EDIT,\r\n\t\t\tpayload: true,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Calculate the number of books that receive from the list of books and show them in the author's table\r\n\t * @param id\r\n\t */\r\n\tfunction calculateNumOfBooks(id: number) {\r\n\t\treturn books.filter((item) => item.author_id === id).length;\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<AddAndEditAuthor authorInfo={selectedRow} selectedRow={selectedRow} />\r\n\t\t\t<SearchAuthors />\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{authors.length ? (\r\n\t\t\t\t\t<div className=\"table-responsive\">\r\n\t\t\t\t\t\t<table className=\"table\">\r\n\t\t\t\t\t\t\t<Header list={headerList} />\r\n\t\t\t\t\t\t\t<tbody>\r\n\t\t\t\t\t\t\t\t{authors.map((row, index) => (\r\n\t\t\t\t\t\t\t\t\t<Author\r\n\t\t\t\t\t\t\t\t\t\tindex={index}\r\n\t\t\t\t\t\t\t\t\t\tid={row.id}\r\n\t\t\t\t\t\t\t\t\t\tfullName={row.fullName}\r\n\t\t\t\t\t\t\t\t\t\tnumOfBooks={calculateNumOfBooks(row.id)}\r\n\t\t\t\t\t\t\t\t\t\tedit={() => sendAuthorInfo(row.id)}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t))}\r\n\t\t\t\t\t\t\t</tbody>\r\n\t\t\t\t\t\t</table>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<div className=\"alert alert-danger\" role=\"alert\">\r\n\t\t\t\t\t\tThere is no result to show!\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n};\r\n","// Common components\r\nimport { Navbar } from \"../components/Navbar\";\r\n// React routers\r\nimport { BrowserRouter as Router, Route, Redirect, Switch } from \"react-router-dom\";\r\n// Screens\r\nimport { Books } from \"./Books\";\r\nimport { Authors } from \"./Authors\";\r\n\r\n/**\r\n * This component due to show the main pages ang manage the routes\r\n */\r\nexport default () => {\r\n\treturn (\r\n\t\t<Router basename={process.env.NODE_ENV === \"production\" ? window.location.pathname : \"/\"}>\r\n\t\t\t<Navbar />\r\n\t\t\t<Switch>\r\n\t\t\t\t<Redirect from=\"/\" to=\"/books\" exact strict />\r\n\t\t\t\t<Route path=\"/books\" component={Books} />\r\n\t\t\t\t<Route path=\"/authors\" component={Authors} />\r\n\t\t\t</Switch>\r\n\t\t</Router>\r\n\t);\r\n};\r\n","import React from \"react\";\r\n// Screens\r\nimport Screens from \"./screens\";\r\n\r\nconst App: React.FC = () => {\r\n\treturn (\r\n\t\t<div className=\"App\">\r\n\t\t\t<Screens />\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { combineReducers } from \"redux\";\r\nimport { authorReducer } from \"./Authors/author.reducer\";\r\nimport { bookReducer } from \"./Books/book.reducer\";\r\n\r\nexport const reducers = combineReducers({\r\n\tauthors: authorReducer,\r\n\tbooks: bookReducer,\r\n});\r\n","import { createStore, compose, applyMiddleware } from \"redux\";\r\nimport { reducers } from \"./index.reducers\";\r\n\r\nconst customMiddleware = (store: any) => (dispatch: any) => async (action: any) => {\r\n\tsetTimeout(() => {\r\n\t\tconst { computedStates } = store.getState();\r\n\t\tconst convertToString = JSON.stringify(computedStates[computedStates.length - 1].state);\r\n\t\twindow.localStorage.setItem(\"persistRedux\", convertToString);\r\n\t}, 0);\r\n\r\n\tdispatch(action);\r\n};\r\nexport const appStore = createStore(\r\n\treducers,\r\n\tJSON.parse(window.localStorage.getItem(\"persistRedux\")!) || {},\r\n\t// @ts-ignore\r\n\tcompose(window.__REDUX_DEVTOOLS_EXTENSION__(), applyMiddleware(customMiddleware)),\r\n);\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { appStore } from \"./store/index.store\";\r\n\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<Provider store={appStore}>\r\n\t\t\t<App />\r\n\t\t</Provider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById(\"root\"),\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}